// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id    String  @id @default(uuid())
  email String  @unique
  name  String?
}

model Client {
  id                      String             @id @default(uuid())
  name                    String?
  age                     Int?
  gender                  String?
  phone                   String?
  whatsapp_number         String?
  last_interaction        DateTime?          @default(now())
  screeningStatus         Status             @default(WELCOME)
  location                String?
  is_staying_with_someone Boolean?
  someone_phone_number    String?
  is_creened              Boolean?
  responses               ClientResponse[]
  currentQuestionIndex    Int?
  results                 AssessmentResult[]

  @@unique([whatsapp_number])
  @@map("client")
}

model Question {
  id       String     @id @default(uuid())
  addedAt  DateTime   @default(now())
  content  String     @db.VarChar(1000)
  parent   Question?  @relation("parent_to_child", fields: [parentId], references: [id])
  parentId String?
  children Question[] @relation("parent_to_child")

  @@map("question")
}

model ClientResponse {
  id        String   @id @default(uuid())
  addedAt   DateTime @default(now())
  answer    String   @db.VarChar(1000)
  client    Client?  @relation(fields: [clientId], references: [id])
  clientId  String?
  question  String
  score     Int?
  status    Status
  timestamp BigInt?

  @@map("response")
}

enum Status {
  WELCOME
  NAME
  AGE
  GENDER
  LOCATION
  NEXT_OF_KIN
  NEXT_OF_KIN_PHONE
  SCREENING
  DEPRESSION
  ANXIETY
  COMPLETED
}

enum Scale {
  MINIMAL_OR_NONE
  SEVERE
  MILD
  MODERATE
  MODERATELY_SEVERE
}

model AssessmentResult {
  id              String   @id @default(uuid())
  client          Client   @relation(fields: [clientId], references: [id])
  clientId        String
  depressionScore Int?
  depressionScale Scale?
  anxietyScore    Int?
  anxietyScale    Scale?
  period          DateTime @default(now())

  @@map("assessment")
}
